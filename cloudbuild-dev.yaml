steps:
  # Build the container image
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-f", "Dockerfile", "-t", "europe-west2-docker.pkg.dev/${PROJECT_ID}/docker-images/cir-converter-service:$SHORT_SHA", "."]

  # Push the container image to Google Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "europe-west2-docker.pkg.dev/${PROJECT_ID}/docker-images/cir-converter-service:$SHORT_SHA"]

  - name: "gcr.io/cloud-builders/gcloud"
    id: "Show image vulnerabilities"
    entrypoint: bash
    args:
      - "-c"
      - |
        gcloud artifacts vulnerabilities list europe-west2-docker.pkg.dev/${PROJECT_ID}/docker-images/cir-converter-service:latest \
          --format=json > /workspace/vulnerability_report

  - name: "gcr.io/cloud-builders/gcloud"
    id: "Check for critical vulnerabilities"
    entrypoint: bash
    args:
      - "-c"
      - |
        apt-get -y update && apt-get install -y jq
        if jq -e '.[] | select( .vulnerability.effectiveSeverity == "CRITICAL")' /workspace/vulnerability_report > /dev/null; then
          echo "Error: Critical vulnerability found with image"
          exit 1
        fi

  # Deploy the container to Google Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: "Run container"
    entrypoint: gcloud
    args:
      [
        "run",
        "deploy",
        "cir-converter-service",
        "--image",
        "europe-west2-docker.pkg.dev/${PROJECT_ID}/docker-images/cir-converter-service:$SHORT_SHA",
        "--port",
        "5010",
        "--region",
        "europe-west2",
        "--platform",
        "managed",
        "--allow-unauthenticated",
        "--ingress",
        "internal-and-cloud-load-balancing",
        "--service-account",
        "cir-converter-cloud-run@${PROJECT_ID}.iam.gserviceaccount.com",
      ]

options:
  logging: CLOUD_LOGGING_ONLY
